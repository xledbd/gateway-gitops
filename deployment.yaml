apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      app.openshift.io/connects-to: catalog,inventory
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"gateway-coolstore:latest","namespace":"inner-loop"},"fieldPath":"spec.template.spec.containers[?(@.name==\"gateway-coolstore\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: gateway
      app.kubernetes.io/instance: gateway
      app.kubernetes.io/name: gateway
      app.kubernetes.io/part-of: coolstore
      app.openshift.io/runtime: dotnet
      component: gateway
    name: gateway-coolstore
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: gateway
        app.kubernetes.io/instance: gateway
        app.kubernetes.io/name: gateway
        app.kubernetes.io/part-of: coolstore
        app.openshift.io/runtime: dotnet
        component: gateway
        deployment: gateway-coolstore
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: gateway
          app.kubernetes.io/instance: gateway
          app.kubernetes.io/name: gateway
          app.kubernetes.io/part-of: coolstore
          app.openshift.io/runtime: dotnet
          component: gateway
          deployment: gateway-coolstore
          maistra.io/expose-route: "true"
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/coolstore-staging/gateway-coolstore:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: gateway-coolstore
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
kind: List
metadata:
  resourceVersion: ""
